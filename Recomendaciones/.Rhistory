names(ga.data) <-c("Fecha","Venta")
mailsytd <- merge(mailsytd,ga.data, by.x="Fecha",by.y ="Fecha",ALL=TRUE)
mailsytd$VpM <- round(mailsytd$Venta/mailsytd$Enviados,digits=2)
rm(ga.data)
#####
library(RGoogleAnalytics)
load(file="~/Dropbox/Ripley/Analytics/GA/oauth_token")
ValidateToken(oauth_token)
query.list <- Init(start.date = as.Date("2016-01-01"),
end.date = as.Date(Sys.Date()),
dimensions = "ga:date,ga:channelGrouping,ga:week",
metrics = "ga:sessions,ga:itemRevenue",
max.results = 1000,
sort = "ga:date",
#filters ="ga:sourceMedium==mail",
table.id = "ga:19886580")
ga.query <- QueryBuilder(query.list)
ga.data <- GetReportData(ga.query, oauth_token, split_daywise = T)
ga.data$date <- as.Date(ga.data$date, "%Y%m%d")
ga.data$channelGrouping[ga.data$channelGrouping=="Mail"] <- "Email"
ga.data <- aggregate(itemRevenue~date,subset(ga.data,channelGrouping=="Email"),sum)
ga.data$date <- as.yearmon(ga.data$date, "%Y%m")
ga.data <- aggregate(itemRevenue~date,ga.data,sum)
colnames(ga.data)
library(lubridate)
library(zoo)
mailsytd <- read.csv("~/Desktop/mails YTD/Report Export.csv", stringsAsFactors=FALSE)
options("scipen" = 10)
options()$scipen
head(mailsytd$Last.Send,n=100)
colnames(mailsytd)
mailsytd$Last.Send <- as.character(mailsytd$Last.Send)
mailsytd$Last.Send <- as.Date(mailsytd$Last.Send, "%m/%d/%y")
mailsytd$Last.Send <- as.yearmon(mailsytd$Last.Send, "%Y%m")
mailsytd2 <- aggregate(Sent~Last.Send,mailsytd,sum)
mailsytd3 <- aggregate(Gross.Opens~Last.Send,mailsytd,sum)
mailsytd4 <- aggregate(Gross.Clicks~Last.Send,mailsytd,sum)
mailsytd <- merge(mailsytd2,mailsytd3, by.x="Last.Send",by.y = "Last.Send")
mailsytd <- merge(mailsytd,mailsytd4, by.x="Last.Send",by.y = "Last.Send")
rm(mailsytd4,mailsytd3,mailsytd2)
names(mailsytd) <-c("Fecha","Enviados","Abiertos","Clicks")
colnames(ga.data)
names(ga.data) <-c("Fecha","Venta")
colnames(ga.data)
View(mailsytd)
mailsytd <- merge(mailsytd,ga.data, by.x="Fecha",by.y ="Fecha",ALL=TRUE)
library(lubridate)
library(zoo)
mailsytd <- read.csv("~/Desktop/mails YTD/Report Export.csv", stringsAsFactors=FALSE)
options("scipen" = 10)
options()$scipen
head(mailsytd$Last.Send,n=100)
colnames(mailsytd)
mailsytd$Last.Send <- as.character(mailsytd$Last.Send)
mailsytd$Last.Send <- as.Date(mailsytd$Last.Send, "%m/%d/%y")
mailsytd$Last.Send <- as.yearmon(mailsytd$Last.Send, "%Y%m")
mailsytd2 <- aggregate(Sent~Last.Send,mailsytd,sum)
mailsytd3 <- aggregate(Gross.Opens~Last.Send,mailsytd,sum)
mailsytd4 <- aggregate(Gross.Clicks~Last.Send,mailsytd,sum)
mailsytd <- merge(mailsytd2,mailsytd3, by.x="Last.Send",by.y = "Last.Send")
mailsytd <- merge(mailsytd,mailsytd4, by.x="Last.Send",by.y = "Last.Send")
rm(mailsytd4,mailsytd3,mailsytd2)
names(mailsytd) <-c("Fecha","Enviados","Abiertos","Clicks")
View(mailsytd)
View(ga.data)
View(mailsytd)
library(lubridate)
library(zoo)
mailsytd <- read.csv("~/Desktop/mails YTD/Report Export.csv", stringsAsFactors=FALSE)
options("scipen" = 10)
options()$scipen
head(mailsytd$Last.Send,n=100)
colnames(mailsytd)
mailsytd$Last.Send <- as.character(mailsytd$Last.Send)
head(mailsytd$Last.Send)
mailsytd$Last.Send <- as.Date(mailsytd$Last.Send, "%m/%d/%Y")
mailsytd$Last.Send <- as.yearmon(mailsytd$Last.Send, "%Y%m")
mailsytd2 <- aggregate(Sent~Last.Send,mailsytd,sum)
mailsytd3 <- aggregate(Gross.Opens~Last.Send,mailsytd,sum)
mailsytd4 <- aggregate(Gross.Clicks~Last.Send,mailsytd,sum)
mailsytd <- merge(mailsytd2,mailsytd3, by.x="Last.Send",by.y = "Last.Send")
mailsytd <- merge(mailsytd,mailsytd4, by.x="Last.Send",by.y = "Last.Send")
rm(mailsytd4,mailsytd3,mailsytd2)
names(mailsytd) <-c("Fecha","Enviados","Abiertos","Clicks")
View(mailsytd)
mailsytd <- merge(mailsytd,ga.data, by.x="Fecha",by.y ="Fecha",ALL=TRUE)
mailsytd$VpM <- round(mailsytd$Venta/mailsytd$Enviados,digits=2)
View(mailsytd)
library(lubridate)
library(zoo)
mailsytd <- read.csv("~/Desktop/mails YTD/Report Export.csv", stringsAsFactors=FALSE)
options("scipen" = 10)
options()$scipen
head(mailsytd$Last.Send,n=100)
colnames(mailsytd)
mailsytd$Last.Send <- as.character(mailsytd$Last.Send)
mailsytd$Last.Send <- as.Date(mailsytd$Last.Send, "%m/%d/%Y")
mailsytd$Last.Send <- as.yearmon(mailsytd$Last.Send, "%Y%m")
mailsytd2 <- aggregate(Sent~Last.Send,mailsytd,sum)
mailsytd3 <- aggregate(Gross.Opens~Last.Send,mailsytd,sum)
mailsytd4 <- aggregate(Gross.Clicks~Last.Send,mailsytd,sum)
mailsytd <- merge(mailsytd2,mailsytd3, by.x="Last.Send",by.y = "Last.Send")
mailsytd <- merge(mailsytd,mailsytd4, by.x="Last.Send",by.y = "Last.Send")
rm(mailsytd4,mailsytd3,mailsytd2)
names(mailsytd) <-c("Fecha","Enviados","Abiertos","Clicks")
View(mailsytd)
mailsytd$Explotacion <- round(mailsytd$Venta/mailsytd$Enviados,digits=2)
mailsytd <- merge(mailsytd,ga.data, by.x="Fecha",by.y ="Fecha",ALL=TRUE)
mailsytd$Explotacion <- round(mailsytd$Venta/mailsytd$Enviados,digits=2)
View(mailsytd)
class(mailsytd$Fecha)
mailsytd
mailsytd$Open_Rate <- round(mailsytd$รง/mailsytd$Enviados,digits=2)
mailsytd$Open_Rate <- round(mailsytd$Abiertos/mailsytd$Enviados,digits=2)
View(mailsytd)
library(ggplot2)
ggplot(mailsytd,aes(Last.Send))+
geom_bar(aes(y=Sent, colour="Fecha" ))+
geom_line(aes(y=Sent, colour="Abiertos" ))+
geom_line(aes(y=Sent, colour="Clicks" ))
ggplot(mailsytd,aes(x=as.factor(Fecha), y=Enviados))+
geom_bar(stat="identity")+
xlab("Mes")+
ylab("Correos")+
scale_y_continuous(breaks=seq(0,30000000,10000000))+
theme_bw()
View(mailsytd)
View(mailsytd)
# c("Email","LOGONID" ,"Opt.In.Date")
colnames(Ripley.Chile.Database...All...Aug.1.2016.01.30.32.PM)
base<- read.csv("~/Dropbox/ripley/Analytics/consolidacion/spop/Ripley Chile Database - OptIns - Aug 29 2016 04-40-00 PM.CSV", stringsAsFactors=FALSE)[ ,c("Email","LOGONID" ,"Opt.In.Date")]
tail(base)
base$Opt.In.Date <- as.Date(base$Opt.In.Date, "%d/%m/%Y")
base$Opt.In.Date <- as.yearmon(base$Opt.In.Date, "%Y%m")
base <- aggregate(LOGONID~Opt.In.Date,base,length)
base$LOGONID <- cumsum(base$LOGONID)
colnames(base)
names(base) <-c("Fecha","Base")
mailsytd <- merge(mailsytd,base, by.x="Fecha",by.y ="Fecha")
mailsytd$explotacion <- round(mailsytd$Venta/mailsytd$Base,digits = 2)
mailsytd$contactabilidad <- round(mailsytd$Enviados/mailsytd$Base,digits = 2)
View(mailsytd)
write.csv(mailsytd,file="mailsytd.csv",row.names = F)
write.csv(mailsytd,file="~/Desktop/mailsytd.csv",row.names = F)
View(mailsytd)
library(RMySQL)
library(RCurl)
library(repmis)
#setwd("~/Dropbox/ripley/Temp/Dump")
########
######## Tabla de productos publicados
########
retarget <- dbConnect(MySQL(),
user="big_data", password="analytics",
dbname="BigData", host="data.retargeting.cl")
productos <- dbGetQuery(retarget, "SELECT sku,thumbnail,url, name FROM sku;")
names(productos) <- c("CARROSKU","imageproducto1","urlproducto1","nameproducto1")
productos <- productos[!(productos$imageproducto1=="http://www.ripley.clnull"),]
productos <- productos[!(productos$nameproducto1==""),]
productos$urlproducto1 <- gsub("http://","",productos$urlproducto1)
write.csv(productos,file = "productos.csv",row.names = FALSE)
########
######## Tabla de productos recomendados (Y publicados)
########
names(productos) <- c("PARTNUM","image","url","name")
transrules2 <- source_DropboxData("transrules2.csv","cknbe73vvvd7l57",sep = ",",header = TRUE)
transrules2 <- transrules2[(transrules2$consequent %in% productos$PARTNUM),]
transrules2 <- merge(transrules2,productos,by.x="antecedent",by.y="PARTNUM")
transrules2 <- subset(transrules2,select=c("antecedent","consequent","name"))
names(transrules2) <- c("antecedent","consequent","antecedentname")
transrules2 <- merge(transrules2,productos,by.x="consequent",by.y="PARTNUM")
transrules2 <- subset(transrules2,select=c("antecedent","consequent","antecedentname","name","url","image"))
names(transrules2) <- c("antecedent","consequent","antecedentname","conseqname","consequrl","conseqimage")
colnames(transrules2)
write.csv(transrules2,file = "reglasrecom.csv",row.names=FALSE)
#subir archivos a FTP
ftpUpload("productos.csv", "ftp://rarmijok_ripley.cl:S.1lV3r.p0.p123@transfer3.silverpop.com/upload/productos.csv")
ftpUpload("reglasrecom.csv", "ftp://rarmijok_ripley.cl:S.1lV3r.p0.p123@transfer3.silverpop.com/upload/reglasrecom.csv")
setwd("~/Dropbox/Ripley/Analytics/GA")
options("scipen" = 10)
options()$scipen
library(ggplot2)
library(RGoogleAnalytics)
library(scales)
library(lubridate)
#oauth_token <- Auth(client.id = "680717696180-uuebg157061qvgrj3svh63q8a4hpdgut.apps.googleusercontent.com", client.secret = "3wlcoTPiSlhXxSfZQXm95kAZ")
#save(oauth_token, file="oauth_token")
as.Date(cut(Sys.Date(), "weeks"))-1
load(file="oauth_token")
ValidateToken(oauth_token)
query.list <- Init(start.date = as.Date(cut(Sys.Date(), "weeks"))-1,
end.date = as.Date(Sys.Date()),
dimensions = "ga:date,ga:channelGrouping,ga:week",
metrics = "ga:sessions,ga:itemRevenue",
max.results = 1000,
sort = "ga:date",
#filters ="ga:sourceMedium==mail",
table.id = "ga:19886580")
ga.query <- QueryBuilder(query.list)
ga.data <- GetReportData(ga.query, oauth_token, split_daywise = T)
ga.data$date <- as.Date(ga.data$date, "%Y%m%d")
ga.data$day <- wday(ga.data$date,label = TRUE)
#
table(ga.data$channelGrouping)
ga.data$channelGrouping[ga.data$channelGrouping=="Other Advertising"] <- "(Other)"
ga.data$channelGrouping[ga.data$channelGrouping=="Criteo"] <- "Remarketing"
ga.data$channelGrouping[ga.data$channelGrouping=="DRA"] <- "Remarketing"
ga.data$channelGrouping[ga.data$channelGrouping=="Premium Display"] <- "Display"
ga.data$channelGrouping[ga.data$channelGrouping=="Youtube"] <- "Display"
ga.data$channelGrouping[ga.data$channelGrouping=="Google Display"] <- "Display"
ga.data$channelGrouping[ga.data$channelGrouping=="Facebook"] <- "Display"
ga.data$channelGrouping[ga.data$channelGrouping=="Google GSP"] <- "Display"
ga.data$channelGrouping[ga.data$channelGrouping=="Branded Paid Search"] <- "Paid Search"
ga.data$channelGrouping[ga.data$channelGrouping=="Generic Paid Search"] <- "Paid Search"
ga.data$channelGrouping[ga.data$channelGrouping=="SEM"] <- "Paid Search"
ga.data$channelGrouping[ga.data$channelGrouping=="Mail"] <- "Email"
ga.data$channelGrouping[ga.data$channelGrouping=="SEO"] <- "Organic Search"
table(ga.data$channelGrouping)
actual <- ga.data
actual$Semana <- "Actual"
load(file="oauth_token")
ValidateToken(oauth_token)
query.list <- Init(start.date = as.Date(cut(Sys.Date(), "weeks"))-8-7*4,
end.date = as.Date(cut(Sys.Date(), "weeks"))-9,
dimensions = "ga:date,ga:channelGrouping,ga:week",
metrics = "ga:sessions,ga:itemRevenue",
max.results = 1000,
sort = "ga:date",
#filters ="ga:sourceMedium==mail",
table.id = "ga:19886580")
ga.query <- QueryBuilder(query.list)
ga.data <- GetReportData(ga.query, oauth_token, split_daywise = T)
ga.data$date <- as.Date(ga.data$date, "%Y%m%d")
ga.data$day <- wday(ga.data$date,label = TRUE)
#
table(ga.data$channelGrouping)
ga.data$channelGrouping[ga.data$channelGrouping=="Other Advertising"] <- "(Other)"
ga.data$channelGrouping[ga.data$channelGrouping=="Criteo"] <- "Remarketing"
ga.data$channelGrouping[ga.data$channelGrouping=="DRA"] <- "Remarketing"
ga.data$channelGrouping[ga.data$channelGrouping=="Premium Display"] <- "Display"
ga.data$channelGrouping[ga.data$channelGrouping=="Youtube"] <- "Display"
ga.data$channelGrouping[ga.data$channelGrouping=="Google Display"] <- "Display"
ga.data$channelGrouping[ga.data$channelGrouping=="Facebook"] <- "Display"
ga.data$channelGrouping[ga.data$channelGrouping=="Google GSP"] <- "Display"
ga.data$channelGrouping[ga.data$channelGrouping=="Branded Paid Search"] <- "Paid Search"
ga.data$channelGrouping[ga.data$channelGrouping=="Generic Paid Search"] <- "Paid Search"
ga.data$channelGrouping[ga.data$channelGrouping=="SEM"] <- "Paid Search"
ga.data$channelGrouping[ga.data$channelGrouping=="Mail"] <- "Email"
ga.data$channelGrouping[ga.data$channelGrouping=="SEO"] <- "Organic Search"
table(ga.data$channelGrouping)
pasada <- ga.data
pasada$Semana <- "Promedio 4 anteriores"
load(file="oauth_token")
ValidateToken(oauth_token)
query.list <- Init(start.date = as.Date(cut(Sys.Date(), "weeks"))-8,
end.date = as.Date(cut(Sys.Date(), "weeks"))-2,
dimensions = "ga:date,ga:channelGrouping,ga:week",
metrics = "ga:sessions,ga:itemRevenue",
max.results = 1000,
sort = "ga:date",
#filters ="ga:sourceMedium==mail",
table.id = "ga:19886580")
ga.query <- QueryBuilder(query.list)
ga.data <- GetReportData(ga.query, oauth_token, split_daywise = T)
ga.data$date <- as.Date(ga.data$date, "%Y%m%d")
ga.data$day <- wday(ga.data$date,label = TRUE)
#
table(ga.data$channelGrouping)
ga.data$channelGrouping[ga.data$channelGrouping=="Other Advertising"] <- "(Other)"
ga.data$channelGrouping[ga.data$channelGrouping=="Criteo"] <- "Remarketing"
ga.data$channelGrouping[ga.data$channelGrouping=="DRA"] <- "Remarketing"
ga.data$channelGrouping[ga.data$channelGrouping=="Premium Display"] <- "Display"
ga.data$channelGrouping[ga.data$channelGrouping=="Youtube"] <- "Display"
ga.data$channelGrouping[ga.data$channelGrouping=="Google Display"] <- "Display"
ga.data$channelGrouping[ga.data$channelGrouping=="Facebook"] <- "Display"
ga.data$channelGrouping[ga.data$channelGrouping=="Google GSP"] <- "Display"
ga.data$channelGrouping[ga.data$channelGrouping=="Branded Paid Search"] <- "Paid Search"
ga.data$channelGrouping[ga.data$channelGrouping=="Generic Paid Search"] <- "Paid Search"
ga.data$channelGrouping[ga.data$channelGrouping=="SEM"] <- "Paid Search"
ga.data$channelGrouping[ga.data$channelGrouping=="Mail"] <- "Email"
ga.data$channelGrouping[ga.data$channelGrouping=="SEO"] <- "Organic Search"
table(ga.data$channelGrouping)
Pasada1 <- ga.data
Pasada1$Semana <- "Pasada"
#JUNTAR LAS QUERIES
ga.data <-rbind(pasada,Pasada1)
ga.data <-rbind(pasada,Pasada1,actual)
# trx <- subset(trx,Fec_Nacimiento < as.Date("1990-01-01") & Fec_Nacimiento > as.Date("1970-01-01") )
ga.data <- subset(ga.data,!(date > as.Date("2016-05-29") & date < as.Date("2016-06-06")))
aggregate(itemRevenue~week,subset(ga.data,channelGrouping=="Email"),sum)
ga.data3 <- aggregate(itemRevenue~channelGrouping+day+Semana,subset(ga.data,channelGrouping=="Email" | channelGrouping=="Paid Search"),mean)
ga.data3 <- aggregate(itemRevenue~channelGrouping+day+Semana,subset(ga.data,channelGrouping=="Direct" | channelGrouping=="Paid Search"),mean)
ga.data3 <- aggregate(itemRevenue~channelGrouping+day+Semana,subset(ga.data,channelGrouping=="Email"),mean)
ga.data3 <- aggregate(itemRevenue~channelGrouping+day+Semana,ga.data,mean)
#plot3 <- #ventas por correo
ggplot(data=ga.data3, aes(x=day, y=itemRevenue, group=Semana, colour=Semana))+
geom_line(size=1.5)+
expand_limits(y=0) +
xlab(" ") + ylab("Ventas") + # Set axis labels
ggtitle("Ventas diarias traidas por Canal") +
theme_bw()+
facet_wrap( ~ channelGrouping, ncol=2,scales = "free")+
scale_y_continuous(labels = dollar)
#ggsave(filename = "~/Dropbox/Ripley/Temp/reporte/GA04.https://www.youtube.com/watch?v=Ty0OObegLYIventas.por.canal.png",plot = plot3,,width=10,height=8,units="in",dpi=100)
setwd("~/Dropbox/ripley/Analytics/DB2/recomendacioncompras")
library(arules)
library(RJDBC)
library(ggplot2)
library(RMySQL)
jcc = JDBC("com.ibm.db2.jcc.DB2Driver","~/Dropbox/Ripley/Analytics/DB2/db2driver/db2jcc4.jar")
conn = dbConnect(jcc,
"jdbc:db2://10.0.156.20:50000/MALL:currentSchema=DB2INST1;",
#currentSchema="DB2INST1",
user="consulta",
password="consulta")
rs = dbSendQuery(conn,
"SELECT DB2INST1.ORDERITEMS.PARTNUM, DB2INST1.ORDERITEMS.ORDERS_ID, DB2INST1.ORDERS.MEMBER_ID
FROM DB2INST1.ORDERS
JOIN DB2INST1.ORDERITEMS
ON DB2INST1.ORDERS.ORDERS_ID = DB2INST1.ORDERITEMS.ORDERS_ID
WHERE (DB2INST1.ORDERS.STATUS='C' OR DB2INST1.ORDERS.STATUS='G')
AND DB2INST1.ORDERS.TIMEPLACED > '2015-07-07 23:30:11'")
ORDERS = fetch(rs, -1)
#ORDERSTEMP <- ORDERS
#save(ORDERSTEMP,file="ORDERSTEM.RDA")
#load(file="ORDERSTEM.RDA")
#ORDERS <- ORDERSTEMP
ORDERS <- subset(ORDERS,select=c("ORDERS_ID","PARTNUM"))
rs = dbSendQuery(conn,
"WITH TEMP_RET AS (SELECT HIJO.CATENTRY_ID,
CASE WHEN MAX(DECODE(HIJO_ATTR.IDENTIFIER, 'RETIRO_TIENDA', HIJO_ATTR.IDENTIFIER )) = 'RETIRO_TIENDA' THEN 'SI' ELSE 'NO' END AS RET_HIJO,
CASE WHEN MAX(DECODE(HIJO_ATTR.IDENTIFIER, 'DESP_DOMICILIO', HIJO_ATTR.IDENTIFIER )) = 'DESP_DOMICILIO' THEN 'SI' ELSE 'NO' END AS DESP_HIJO,
CASE WHEN MAX(DECODE(HIJO_ATTR.IDENTIFIER, 'RETIRO_CITY_BOX', HIJO_ATTR.IDENTIFIER )) = 'RETIRO_CITY_BOX' THEN 'SI' ELSE 'NO' END AS RR_HIJO,
CASE WHEN MAX(DECODE(PADRE_ATTR.IDENTIFIER, 'RETIRO_TIENDA', PADRE_ATTR.IDENTIFIER )) = 'RETIRO_TIENDA' THEN 'SI' ELSE 'NO' END AS RET_PADRE,
CASE WHEN MAX(DECODE(PADRE_ATTR.IDENTIFIER, 'DESP_DOMICILIO', PADRE_ATTR.IDENTIFIER )) = 'DESP_DOMICILIO' THEN 'SI' ELSE 'NO' END AS DESP_PADRE,
CASE WHEN MAX(DECODE(PADRE_ATTR.IDENTIFIER, 'RETIRO_CITY_BOX', PADRE_ATTR.IDENTIFIER )) = 'RETIRO_CITY_BOX' THEN 'SI' ELSE 'NO' END AS RR_PADRE
FROM CATENTRY AS HIJO
JOIN CATENTREL ON (CATENTREL.CATENTRY_ID_CHILD = HIJO.CATENTRY_ID)
JOIN CATENTRY AS PADRE ON (PADRE.CATENTRY_ID = CATENTREL.CATENTRY_ID_PARENT)
LEFT OUTER JOIN CATENTRYATTR AS HIJO_CATENTRYATTR ON (HIJO_CATENTRYATTR.CATENTRY_ID = HIJO.CATENTRY_ID)
LEFT OUTER JOIN ATTR AS HIJO_ATTR ON (HIJO_ATTR.ATTR_ID = HIJO_CATENTRYATTR.ATTR_ID)
LEFT OUTER JOIN ATTRVAL AS HIJO_ATTRVAL ON (HIJO_ATTRVAL.ATTRVAL_ID = HIJO_CATENTRYATTR.ATTRVAL_ID)
LEFT OUTER JOIN ATTRDESC AS HIJO_ATTRDESC ON (HIJO_ATTRDESC.ATTR_ID = HIJO_ATTR.ATTR_ID)
LEFT OUTER JOIN ATTRVALDESC AS HIJO_ATTRVALDESC ON (HIJO_ATTRVALDESC.ATTRVAL_ID = HIJO_ATTRVAL.ATTRVAL_ID)
LEFT OUTER JOIN CATENTRYATTR AS PADRE_CATENTRYATTR ON (PADRE_CATENTRYATTR.CATENTRY_ID = PADRE.CATENTRY_ID)
LEFT OUTER JOIN ATTR AS PADRE_ATTR ON (PADRE_ATTR.ATTR_ID = PADRE_CATENTRYATTR.ATTR_ID)
LEFT OUTER JOIN ATTRVAL AS PADRE_ATTRVAL ON (PADRE_ATTRVAL.ATTRVAL_ID = PADRE_CATENTRYATTR.ATTRVAL_ID)
LEFT OUTER JOIN ATTRDESC AS PADRE_ATTRDESC ON (PADRE_ATTRDESC.ATTR_ID = PADRE_ATTR.ATTR_ID)
LEFT OUTER JOIN ATTRVALDESC AS PADRE_ATTRVALDESC ON (PADRE_ATTRVALDESC.ATTRVAL_ID = PADRE_ATTRVAL.ATTRVAL_ID)
WHERE CATENTREL.CATRELTYPE_ID = 'PRODUCT_ITEM'
GROUP BY HIJO.CATENTRY_ID)
, TEMP_CAT_VTA_HIJO AS (SELECT DISTINCT HIJO.CATENTRY_ID,
1 AS CATALOGO_VENTA_HIJO
FROM CATENTRY AS HIJO
JOIN CATGPENREL AS HIJO_CATGPENREL ON (HIJO_CATGPENREL.CATENTRY_ID = HIJO.CATENTRY_ID)
WHERE HIJO_CATGPENREL.CATALOG_ID = 10051)
, TEMP_CAT_VTA_PADRE AS (SELECT DISTINCT HIJO.CATENTRY_ID,
1 AS CATALOGO_VENTA_PADRE,
LISTAGG(CATGROUP.IDENTIFIER, ' | ') AS ID_CATEGORIAS_VENTA_PADRE
FROM CATENTRY AS HIJO
JOIN CATENTREL ON (CATENTREL.CATENTRY_ID_CHILD = HIJO.CATENTRY_ID)
JOIN CATENTRY AS PADRE ON (PADRE.CATENTRY_ID = CATENTREL.CATENTRY_ID_PARENT)
JOIN CATGPENREL ON (CATGPENREL.CATENTRY_ID = PADRE.CATENTRY_ID AND CATGPENREL.CATALOG_ID = '10051')
JOIN CATGROUP ON (CATGROUP.CATGROUP_ID = CATGPENREL.CATGROUP_ID)
JOIN CATGRPDESC ON (CATGROUP.CATGROUP_ID = CATGRPDESC.CATGROUP_ID)
JOIN CATGPENREL AS CATGPENREL2 ON (CATGPENREL2.CATENTRY_ID = PADRE.CATENTRY_ID AND CATGPENREL2.CATALOG_ID = '10001')
JOIN CATGRPREL ON (CATGPENREL2.CATGROUP_ID = CATGRPREL.CATGROUP_ID_CHILD)
JOIN CATGROUP AS CATGROUP2 ON (CATGROUP2.CATGROUP_ID = CATGRPREL.CATGROUP_ID_PARENT)
GROUP BY HIJO.CATENTRY_ID)
, TEMP_STOCK AS (SELECT CATENTRY.CATENTRY_ID,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010039', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_REDEX_39,
CASE WHEN SUM(INVSTFFMVW.QTYAVAILABLE)-COALESCE(MAX(DECODE(FFMCENTER.NAME, '010039', INVSTFFMVW.QTYAVAILABLE)),0) > 0 THEN 'SI'
ELSE 'NO'
END AS STOCK_TIENDAS,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010012', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_PARQUE_ARAUCO_12,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010034', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_COSTANERA_34,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010016', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_PLAZA_VESPUCIO_16,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010045', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_PLAZA_OESTE_45,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010025', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_VALPARAISO_25,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010041', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_SERENA_41,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010032', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_RANCAGUA_32,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010074', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_TALCA_74,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010076', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_CURICO_76,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010014', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_PTO_MONTT_14,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010057', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_FLORIDA_CENTER_57,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010077', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_LA_DEHESA_77,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010088', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_ARAUCO_MAIPU_88,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010048', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_PLAZA_NORTE_48,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010071', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_PLAZA_EGANA_71,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010037', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_MARINA_37,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010028', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_EL_TREBOL_28,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010000', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_HUERFANOS_00,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010002', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_MALL_CONCEPCION_02,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010003', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_VINA_03,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010004', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_TEMUCO_04,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010010', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_LOS_ANDES_10,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010018', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_PUENTE_18,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010022', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_CHILLAN_22,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010026', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_ANTOFAGASTA_26,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010029', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_ALTO_LAS_CONDES_29,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010046', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_TOBALABA_46,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010049', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_IQUIQUE_49,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010051', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_MALL_CALAMA_51,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010068', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_PORTAL_TEMUCO_68,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010078', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_PTO_MONTT_II_78,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010079', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_LA_CALERA_79,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010084', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_COPIAPO_84,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010096', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_PUENTA_ARENAS_96,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010097', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_NVA_ALAMEDA_97,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010098', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_NVA_VALDIVIA_STORE_98,
COALESCE(MAX(DECODE(FFMCENTER.NAME, '010099', INVSTFFMVW.QTYAVAILABLE)),0) AS STOCK_SAN_BERNARDO_99
FROM CATENTRY
JOIN INVSTFFMVW ON (INVSTFFMVW.ITEMSPC_ID = CATENTRY.ITEMSPC_ID)
JOIN FFMCENTER ON (FFMCENTER.FFMCENTER_ID = INVSTFFMVW.FFMCENTER_ID)
WHERE FFMCENTER.NAME <> 'ripleycl'
GROUP BY CATENTRY.CATENTRY_ID)
, TEMP_PRECIOS AS(select hijo.PARTNUMBER AS PARTNUMBER,
COALESCE(MAX(DECODE(trade_hijo.NAME, 'ListPrice Vigente', price_hijo.PRICE)),-1)
AS PRECIO_VIGENTE,
COALESCE(MAX(DECODE(trade_hijo.NAME, 'ListPrice Master', price_hijo.PRICE)),-1)
AS PRECIO_MASTER,
COALESCE(MAX(DECODE(trade_hijo.NAME, 'ListPrice Costo', price_hijo.PRICE)),-1)
AS PRECIO_COSTO,
COALESCE(MAX(DECODE(trade_hijo.NAME, 'MC - Precios Especiales TMP', price_hijo.PRICE)),-1)
AS PRECIO_OFERTA_TMP,
COALESCE(MAX(DECODE(trade_hijo.NAME, 'MC - Lista Flag TMP', price_hijo.PRICE)),-1)
AS FLAG_OFERTA_TMP,
COALESCE(MAX(DECODE(trade_hijo.NAME, 'MC - Precios Especiales CAR', price_hijo.PRICE)),-1)
AS PRECIO_RIPLEY_CAR,
COALESCE(MAX(DECODE(trade_hijo.NAME, 'MC - Lista Flag CAR', price_hijo.PRICE)),-1)
AS FLAG_RIPLEY_CAR,
COALESCE(MAX(DECODE(trade_hijo.NAME, 'MC - FlagBajo Costo', price_hijo.PRICE)),-1)
AS FLAG_BAJO_COSTO
from CATENTRY AS hijo
JOIN OFFER AS offer_hijo ON (offer_hijo.CATENTRY_ID = hijo.CATENTRY_ID)
JOIN TRADEPOSCN AS trade_hijo ON (offer_hijo.TRADEPOSCN_ID = trade_hijo.TRADEPOSCN_ID)
JOIN OFFERPRICE AS price_hijo ON (price_hijo.OFFER_ID = offer_hijo.OFFER_ID)
WHERE offer_hijo.PUBLISHED = 1
GROUP BY hijo.PARTNUMBER)
, TEMP_CAT_MAESTRO_HIJO AS(SELECT HIJO.CATENTRY_ID
, 1 AS HIJO_CAT_MAESTRO
FROM CATENTRY AS HIJO
JOIN CATGPENREL AS MAESTRO_CATGPENREL ON (MAESTRO_CATGPENREL.CATENTRY_ID = HIJO.CATENTRY_ID AND MAESTRO_CATGPENREL.CATALOG_ID = '10001'))
, TEMP_ATTR_DEFINICION AS (SELECT HIJO.CATENTRY_ID,
LISTAGG (HIJO_ATTRDESC.NAME, '/') || ' : ' || LISTAGG (HIJO_ATTRVALDESC.VALUE, '/') AS ATRIBUTOS_DEFINICION
FROM CATENTRY AS HIJO
JOIN CATENTRYATTR AS HIJO_CATENTRYATTR ON (HIJO_CATENTRYATTR.CATENTRY_ID = HIJO.CATENTRY_ID and HIJO_CATENTRYATTR.USAGE = 1)
LEFT OUTER JOIN ATTR AS HIJO_ATTR ON (HIJO_ATTR.ATTR_ID = HIJO_CATENTRYATTR.ATTR_ID)
LEFT OUTER JOIN ATTRVAL AS HIJO_ATTRVAL ON (HIJO_ATTRVAL.ATTRVAL_ID = HIJO_CATENTRYATTR.ATTRVAL_ID)
LEFT OUTER JOIN ATTRDESC AS HIJO_ATTRDESC ON (HIJO_ATTRDESC.ATTR_ID = HIJO_ATTR.ATTR_ID)
LEFT OUTER JOIN ATTRVALDESC AS HIJO_ATTRVALDESC ON (HIJO_ATTRVALDESC.ATTRVAL_ID = HIJO_ATTRVAL.ATTRVAL_ID)
WHERE HIJO.CATENTTYPE_ID = 'ItemBean'
GROUP BY HIJO.CATENTRY_ID)
SELECT
MAESTRO_CATGRPDESC.NAME AS CATALOGO_MAESTRO_NAME
, MAESTRO_CATGROUP2.IDENTIFIER AS CATALOGO_MAESTRO2_IDENTIFIER
, PADRE.PARTNUMBER AS SKU_PADRE
, PADRE_CATENTDESC.NAME AS NOMBRE_PADRE
, PADRE.MFNAME AS MARCA_PADRE
, HIJO.PARTNUMBER AS SKU_HIJO
, CASE WHEN PRECIOS_HIJO.PRECIO_VIGENTE > -1 THEN PRECIOS_HIJO.PRECIO_VIGENTE ELSE PRECIOS_PADRE.PRECIO_VIGENTE END AS PRECIO_VIGENTE
, CASE WHEN PRECIOS_HIJO.PRECIO_MASTER > -1 THEN PRECIOS_HIJO.PRECIO_MASTER ELSE PRECIOS_PADRE.PRECIO_MASTER END AS PRECIO_MASTER
, CASE WHEN PRECIOS_HIJO.PRECIO_COSTO > -1 THEN PRECIOS_HIJO.PRECIO_COSTO ELSE PRECIOS_PADRE.PRECIO_COSTO END AS PRECIO_COSTO
, HIJO_CATENTDESC.FULLIMAGE
FROM CATENTRY AS HIJO
JOIN CATENTDESC AS HIJO_CATENTDESC ON (HIJO_CATENTDESC.CATENTRY_ID = HIJO.CATENTRY_ID AND HIJO_CATENTDESC.LANGUAGE_ID = '-5')
JOIN CATENTREL ON (CATENTREL.CATENTRY_ID_CHILD = HIJO.CATENTRY_ID)
JOIN CATENTRY AS PADRE ON (PADRE.CATENTRY_ID = CATENTREL.CATENTRY_ID_PARENT)
JOIN CATENTDESC AS PADRE_CATENTDESC ON (PADRE_CATENTDESC.CATENTRY_ID = PADRE.CATENTRY_ID AND PADRE_CATENTDESC.LANGUAGE_ID = '-5')
JOIN CATGPENREL AS MAESTRO_CATGPENREL ON (MAESTRO_CATGPENREL.CATENTRY_ID = PADRE.CATENTRY_ID AND MAESTRO_CATGPENREL.CATALOG_ID = '10001')
JOIN CATGRPREL ON (CATGRPREL.CATGROUP_ID_CHILD = MAESTRO_CATGPENREL.CATGROUP_ID)
JOIN CATGROUP AS MAESTRO_CATGROUP2 ON (MAESTRO_CATGPENREL.CATGROUP_ID = MAESTRO_CATGROUP2.CATGROUP_ID)
JOIN CATGRPDESC AS MAESTRO_CATGRPDESC2 ON (MAESTRO_CATGROUP2.CATGROUP_ID = MAESTRO_CATGRPDESC2.CATGROUP_ID)
JOIN CATGROUP AS MAESTRO_CATGROUP ON (CATGRPREL.CATGROUP_ID_PARENT = MAESTRO_CATGROUP.CATGROUP_ID)
JOIN CATGRPDESC AS MAESTRO_CATGRPDESC ON (MAESTRO_CATGROUP.CATGROUP_ID = MAESTRO_CATGRPDESC.CATGROUP_ID)
LEFT OUTER JOIN TEMP_RET ON (TEMP_RET.CATENTRY_ID = HIJO.CATENTRY_ID)
LEFT OUTER JOIN TEMP_CAT_VTA_HIJO ON (TEMP_CAT_VTA_HIJO.CATENTRY_ID = HIJO.CATENTRY_ID)
LEFT OUTER JOIN TEMP_CAT_VTA_PADRE ON (TEMP_CAT_VTA_PADRE.CATENTRY_ID = HIJO.CATENTRY_ID)
LEFT OUTER JOIN TEMP_STOCK ON (TEMP_STOCK.CATENTRY_ID = HIJO.CATENTRY_ID)
LEFT OUTER JOIN TEMP_CAT_MAESTRO_HIJO ON (TEMP_CAT_MAESTRO_HIJO.CATENTRY_ID = HIJO.CATENTRY_ID)
LEFT OUTER JOIN TEMP_PRECIOS AS PRECIOS_HIJO ON (PRECIOS_HIJO.PARTNUMBER = HIJO.PARTNUMBER)
LEFT OUTER JOIN TEMP_PRECIOS AS PRECIOS_PADRE ON (PRECIOS_PADRE.PARTNUMBER = PADRE.PARTNUMBER)
LEFT OUTER JOIN TEMP_ATTR_DEFINICION ON (TEMP_ATTR_DEFINICION.CATENTRY_ID = HIJO.CATENTRY_ID)
WHERE HIJO.MARKFORDELETE = 0
AND PADRE.MARKFORDELETE = 0
AND CATENTREL.CATRELTYPE_ID = 'PRODUCT_ITEM'
")
productos = fetch(rs, -1)#ESTOS SON LOS PRODUCTOS PUBLICADOS
names(productos) <- c("CATALOGO_MAESTRO_NAME","CATALOGO_MAESTRO2_IDENTIFIER", "SKU_PADRE","NOMBRE_PADRE","MARCA_PADRE","SKU_HIJO","PRECIO_VIGENTE","PRECIO_MASTER","PRECIO_COSTO","IMAGEN")
colnames(productos)
ORDERS <- ORDERS[(ORDERS$PARTNUM %in% productos$SKU_HIJO),] #SACA los productos no publicados de las ordenes
write.table(ORDERS,file="ORDERS.CSV",sep=",",row.names=F)
trans <- read.transactions("ORDERS.CSV", format = "single", sep = ",", cols = c("ORDERS_ID", "PARTNUM"),rm.duplicates = TRUE)
transrules <- apriori(trans, parameter = list(support =0.000001, confidence = 0.000001, maxlen=2,target="rules"))
transrules2 <- as(transrules, "data.frame")
transrules2$rules <- gsub("\\}", "", transrules2$rules)
transrules2$rules <- gsub("\\{", "", transrules2$rules)
transrules2$rules <- as.character(transrules2$rules)
transrules2$antecedent <- sub("=.*$", "\\1", transrules2$rules)
transrules2$antecedent <- substr(transrules2$antecedent, 1, nchar(transrules2$antecedent)-1)
transrules2$consequent <- gsub(".*=>", "", transrules2$rules)
transrules2$consequent <- sub("\\ ","",transrules2$consequent)
transrules2 <- transrules2[which(transrules2$antecedent !="" & transrules2$consequent!=""), ]
transrules2$lift <- as.numeric(transrules2$lift)
transrules2 <- transrules2[order(-transrules2$lift),]
transrules2 <- subset(transrules2,select=c("antecedent","consequent"))
write.csv(transrules2,file="~/Dropbox/ripley/Temp/Dump/public/transrules2.csv",row.names = FALSE)
##############################################################################################################
##############################################################################################################
##############################################################################################################
##############################################################################################################
############################################################################################################
